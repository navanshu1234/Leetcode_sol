class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        if(n<=1){
            return s;
        }
        ArrayList<String> arr = new ArrayList<String>();
        for(int i =0;i<n;i++)
        {
            for(int j =i+1;j<=n;j++)
        {   if(Math.abs(i-j)>1){
            String t = s.substring(i,j);
            arr.add(t);}
        }
        }
        System.out.println(arr);
        StringBuilder sb = new StringBuilder();
        for(int j=0;j<arr.size();j++)
        {   
            String t = arr.get(j);
           
            sb.append(t);
            sb.reverse();
            String rev = sb.toString();
            sb.delete(0, sb.length());
           
            if(!t.equals(rev))
            {
                arr.remove(j);
                j--;
            }
        }
        System.out.println(arr);
        arr.sort(Comparator.comparing(String::length));
        System.out.println(arr);
        if(arr.size()==0)
        {   

            return s.substring(0,1);
        }
        return arr.get(arr.size()-1);
    }
}
